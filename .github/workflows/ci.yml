name: C/C++ CI with Bazel

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Set up Bazel
      uses: bazel-contrib/setup-bazel@0.15.0
      with:
        bazelisk-version: '1.27.0'
        bazelisk-cache: 'true'
        disk-cache: 'true'
        repository-cache: 'true'
      env:
        PYTHON_BIN_PATH: ${{ env.pythonLocation }}/bin/python

    - name: Debug environment (Windows only)
      if: matrix.os == 'windows-latest'
      run: |
        echo "=== Environment Debug Info ==="
        echo "OS: $RUNNER_OS"
        echo "Platform: $RUNNER_ARCH"
        echo "Python location: ${{ env.pythonLocation }}"
        echo "Current directory: $(pwd)"
        echo "Directory contents:"
        ls -la
        echo "Bazel version:"
        bazel --version
        echo "Bazel info:"
        bazel info
        echo "Bazel info (detailed):"
        bazel info --show_make_env
        echo "=== End Environment Debug ==="

    - name: Mount Bazel cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/bazel
          ~/.cache/bazel-repo
        key: bazel-cache-${{ matrix.os }}-${{ github.sha }}
        restore-keys: |
          bazel-cache-${{ matrix.os }}-

    - name: Build all targets
      run: |
        if [ "$RUNNER_OS" == "Windows" ]; then
          echo "Running Bazel build on Windows with detailed logging..."
          bazel build //... --verbose_failures --show_timestamps --output_user_root=./bazel-user-root 2>&1 | tee bazel-build.log
          echo "Bazel build completed with exit code: $?"
          echo "=== Bazel build log ==="
          cat bazel-build.log
          echo "=== End Bazel build log ==="
        else
          bazel build //...
        fi

    - name: Test all targets
      run: bazel test //...
    
    - name: Install Python dependencies and run Python tests
      shell: bash
      run: |
        pip install pytest
        # Copy the Bazel-built extension to the Python package location
        mkdir -p python/src/my_robot_py/
        cp bazel-bin/python/my_robot_py.so python/src/my_robot_py/
        # Add the python directory to PYTHONPATH so tests can find the module
        export PYTHONPATH="${PYTHONPATH}:$(pwd)/python/src"
        pytest tests/python

    - name: Upload debug logs (Windows only)
      if: matrix.os == 'windows-latest' && failure()
      uses: actions/upload-artifact@v4
      with:
        name: windows-debug-logs-${{ github.run_id }}
        path: |
          bazel-build.log
          bazel-user-root/
        retention-days: 7

  lint-and-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run clang-format check (placeholder)
        run: |
          # Placeholder for clang-format check
          echo "Clang-format check would run here."
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Run ruff check (placeholder)
        run: |
          # Placeholder for ruff check
          echo "Ruff check would run here."
